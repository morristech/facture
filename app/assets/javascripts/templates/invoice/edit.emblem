if errors.base
  .alert.alert-danger
    each error in errors.base
      p= error.message

.row
  .col-xs-4
    .form-group
      label for=invoiceReference Reference
      = input id=invoiceReference value=reference class="form-control"
    .form-group
      label for=invoiceCurrency Currency
      = view Ember.Select content=Facture.currencies optionLabelPath="content.symbol" optionValuePath="content.name" prompt="Select a currency" value=currency class="form-control"
    .form-group
      label for=invoiceDate Date
      = view Facture.DatePicker id=invoiceDate class="form-control" value=date

  .col-xs-8
    table.table
      thead
        th style="width: 450px" Description
        th Price
        th Quantity
        th Amount
        th
      tbody
        each lineItems
          tr
            td.small= input value=description class="form-control input-sm"
            td= input value=price class="form-control input-sm"
            td= input value=quantity class="form-control input-sm"
            td= formatMoney amount invoice.currency
            td.text-right
              .btn-group.btn-group-xs.right
                button.btn.btn-default{action "deleteLineItem" this} type="button" data-toggle="tooltip" data-placement="top" data-container="body" title="Delete line item"
                  span.glyphicon.glyphicon-trash
      tfoot
        tr
          td: a href="#" click=newLineItem New Line Item
          td
          td
          td: strong= formatMoney amount currency
          td

hr

button.btn.btn-default{action 'cancel'}
  span.glyphicon.glyphicon-remove-circle
  |  Cancel
'
button.btn.btn-success{action 'save'} class=isThisOrLineItemsDirty::disabled
  span.glyphicon.glyphicon-ok-circle
  |  Save

if project.redmineProjectId
  if isDirty
    button.btn.btn-default.pull-right.has-spinner{action 'importRedmineTimeEntries'} class=isImporting:active
      span.spinner: i.fa.fa-spin.fa-refresh
      |  Import Redmine Time Entries